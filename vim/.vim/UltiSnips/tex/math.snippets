# ----------------------------- #
global !p
def math():
	if vim.eval('&filetype') == 'markdown':
		return True # better solution needs to be find
	else:
		return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal
# ----------------------------- #
# ...then place 'context "math()"' above any snippets you want to expand only in math mode

# Prevent fraction expansion in words containing "ff"
context "math()"
snippet "(^|[^a-zA-Z])ff" "\frac{}{}" rA
`!p snip.rv = match.group(1)`\frac{${1:${VISUAL:}}}{$2}$0
endsnippet

context "math()"
snippet pmat "pmatrix environnement"
\begin{pmatrix}
	$1
\end{pmatrix}
endsnippet

context "math()"
snippet () "\left( \right)" i
\left( $1 \right)
endsnippet

context "math()"
snippet [] "\left[ \right]" i
\left[ $1 \right]
endsnippet

context "math()"
snippet \{} "\left\{ \right\}" i
\left\\{ $1 \right\\}
endsnippet

context "math()"
snippet luint "Integrale 2 bounds" i
\int_{$1}^{$2}
endsnippet

context "math()"
snippet lint "Integrale 1 bounds" i
\int_{$1}
endsnippet

context "math()"
snippet __ "subscript" iA
_{${1:${VISUAL:}}}
endsnippet

context "math()"
snippet ^^ "superscript" iA
^{${1:${VISUAL:}}}
endsnippet

context "math()"
snippet "([\w]|[\}\)\]\|'])sd" "Text subscript" rA
`!p snip.rv = match.group(1)`_{\mathrm{${1:${VISUAL:}}}}$0
endsnippet

snippet "([\w]|[\}\)\]\|'])\*\*" "Automatic * superscript" rA
`!p snip.rv = match.group(1)`^{*}
endsnippet

snippet "([\w]|[\}\)\]\|'])TT" "Automatic transposed superscript" rA
`!p snip.rv = match.group(1)`^{\top}
endsnippet

context "math()"
snippet vect "vecteur" i
\vect{${1:${VISUAL:}}}
endsnippet

context "math()"
snippet tens "tenseur" i
\tens{${1:${VISUAL:}}}
endsnippet

context "math()"
snippet sqrt "racine carr√©e" i
\sqrt{${1:${VISUAL:}}}
endsnippet

context "math()"
snippet <= "le" i
\le
endsnippet

context "math()"
snippet >= "ge" i
\ge
endsnippet

context "math()"
snippet ~= "approx" i
\approx
endsnippet
